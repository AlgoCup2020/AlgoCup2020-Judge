{
  "id": "is-cyclic",
  "title": "Is List cyclic",
  "description":  "Given a singly linked list, write a method `isCyclic` to check if the list has cycles. The space complexity can be O(n). If there is a cycle, return true otherwise return false. Empty lists should be considered non-cyclic.\r\n\r\n### Examples\r\n\r\n* `1->2->3->4->5->6->1` -> `true`",
  "time_limit": 1,
  "memory_limit": 32,
  "level": 2,
  "function": {
    "name": "reverseList",
    "return": {
      "type": "java.lang.Boolean",
      "comment": " Is List cyclic"
    },
    "parameters": [
      {
        "name": "head",
        "type": "org.algohub.engine.type.ListNode",
        "comment": "Input list"
      }
    ]
  },
  "test_cases": [
    {"input": [[1,2,3,4,5,6]], "output": false},
    {"input": [[1,2,3,4,5,6,6]], "output": true},
    {"input": [[1,2,3,4,5,6,1]], "output": true},
    {"input": [[1,2,3,4,5,3,6]], "output": true},
    {"input": [[1]], "output": false},
    {"input": [[1,2]], "output": false},
    {"input": [[2,2]], "output": true},
    {"input": [null], "output": false}
  ]
}

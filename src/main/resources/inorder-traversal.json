{
  "id": "inorder-traversal",
  "title": "Inorder Traversal",
  "description":  "Given a binary tree, Write a method `inorderTraversal` to recursively traverse the tree in the inorder manner. Return array of elements visited in inorder format.\r\n\r\n### Example\r\n\r\n ```\r\n     1\r\n    / \\\r\n   2   3     ==> 4251637\r\n  / \\ / \\\r\n 4  5 6  7 \r\n```",
  "time_limit": 1,
  "memory_limit": 32,
  "level": 1,
  "function": {
    "name": "inorderTraversal",
    "return": {
      "type": "[I",
      "comment": " Inordered array of binary tree elements"
    },
    "parameters": [
      {
        "name": "root",
        "type": "org.algohub.engine.type.TreeNode",
        "comment": "Root of binary tree"
      }
    ]
  },
  "test_cases": [
    {"input": [{"data":1,"left":{"data":2,"left":{"data":4},"right":{"data":5}},"right":{"data":3,"left":{"data":6},"right":{"data":7}}}], "output": [4, 2, 5, 1, 6, 3, 7]},
    {"input": [{"data":1,"left":{"data":2,"left":{"data":4}},"right":{"data":3,"right":{"data":7}}}], "output": [4, 2, 1, 3, 7]},
    {"input": [{"data":1}], "output": [1]},
    {"input": [null], "output": []}
  ]
}

{
  "id": "check-perm",
  "title": "Check Permutations",
  "description": "Given two strings, write a method `permutation` to decide if one is a permutation of other.\r\n\r\n### Examples\r\n\r\n* `\"abc\", \"cba\"` -> `true`\r\n* `\"abc\", \"cb\"` -> `false`",
  "time_limit": 1,
  "memory_limit": 32,
  "level": 1,
  "function": {
    "name": "permutation",
    "return": {
      "type": "java.lang.Boolean",
      "comment": " Indicate if one string is a permutation of another"
    },
    "parameters": [
      {
        "name": "str1",
        "type": "java.lang.String",
        "comment": "first string to be checked for permutation match"
      },
      {
        "name": "str2",
        "type": "java.lang.String",
        "comment": "second string to be checked for permutation match"
      }
    ]
  },
  "test_cases": [
    {"input": ["abc", "cba"], "output": true},
    {"input": ["abc", "cbacba"], "output": false},
    {"input": ["abccba", "cbaccb"], "output": false},
    {"input": ["abc", "cbad"], "output": false},
    {"input": ["AdSda", "dAdaS"], "output": true},
    {"input": ["AbcdefgHA", ""], "output": false},
    {"input": ["", ""], "output": true},
    {"input": ["  ", " "], "output": false},
    {"input": ["A", "A"], "output": true},
    {"input": ["A", "a"], "output": false},
    {"input": [" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", "0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ !\"#$%&'()*+,-./"], "output": true},
    {"input": [" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~a", "0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~"], "output": false}
  ]
}
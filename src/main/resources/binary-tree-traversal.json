{
  "id": "binary-tree-traversal",
  "title": "Binary Tree Traversal",
  "description":  "Given a binary tree, Write a method `preorder` to recursively traverse the tree in the preorder manner. Return array of elements visited in preorder format.\r\n\r\n### Example\r\n\r\n ```\r\n 1\r\n / \\r\n 2   3     ==> 1245367\r\n / \\ / \\\r\n 4  5 6  7 \r\n```",
  "time_limit": 1,
  "memory_limit": 32,
  "level": 1,
  "function": {
    "name": "preorder",
    "return": {
      "type": "[I",
      "comment": " Preordered array if binary tree elements"
    },
    "parameters": [
      {
        "name": "root",
        "type": "org.algohub.engine.type.TreeNode",
        "comment": "Root of binary tree"
      }
    ]
  },
  "test_cases": [
    {"input": [{"data":1,"left":{"data":2,"left":{"data":4},"right":{"data":5}},"right":{"data":3,"left":{"data":6},"right":{"data":7}}}], "output": [1, 2, 4, 5, 3, 6, 7]},
    {"input": [{"data":1}], "output": [1]},
    {"input": [null], "output": []}
  ]
}

{
  "id": "count-paths",
  "title": "Count Paths",
  "description": "You're given a game board that has m x n squares on it, represented by an m x n array. Write a method `countPaths` that takes in m and n and returns the number of possible paths from the top left corner to the bottom right corner. Only down and right directions of movement are permitted.\r\n\r\n### Examples\r\n\r\n``` \r\n countPaths(m = 2, n = 2) => 2 \r\n  \r\n as on the following 2x2 Board, the two paths are A->C->D and A->B->D \r\n  \r\n A B \r\n C D \r\n```",
  "time_limit": 1,
  "memory_limit": 32,
  "level": 2,
  "function": {
    "name": "countPaths",
    "return": {
      "type": "java.lang.Integer",
      "comment": " Number of paths"
    },
    "parameters": [
      {
        "name": "m",
        "type": "java.lang.Integer",
        "comment": "Number of rows"
      },
      {
        "name": "n",
        "type": "java.lang.Integer",
        "comment": "Number of columns"
      }
    ]
  },
  "test_cases": [
    {"input": [1,1], "output": 1},
    {"input": [7,15], "output": 38760},
    {"input": [3,5], "output": 15},
    {"input": [10,12], "output": 167960},
    {"input": [15,16], "output": 77558760},
    {"input": [5,3], "output": 15},
    {"input": [4,1], "output": 1},
    {"input": [2,2], "output": 2},
    {"input": [18,17], "output": 1166803110},
    {"input": [12,6], "output": 4368},
    {"input": [8,10], "output": 11440},
    {"input": [0,0], "output": 0},
    {"input": [1,0], "output": 0},
    {"input": [0,1], "output": 0}
  ]
}
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE"
    }
}

plugins {
    id "java"
    id "jacoco"
    id "org.sonarqube" version "1.2"
}

apply plugin: 'spring-boot'
apply from: "$rootDir/gradle/versioning.gradle"

group = 'org.algohub.engine'
description = """Judge Engine"""

//noinspection GroovyUnusedAssignment
sourceCompatibility = 1.8

repositories {
     mavenCentral()
}

sonarqube {
    //noinspection GroovyAssignabilityCheck
    properties {
        //noinspection GroovyAssignabilityCheck
        property "sonar.host.url", "https://sonarqube.com"
        //noinspection GroovyAssignabilityCheck
        property "sonar.projectKey", "JAlgoArena"
        //noinspection GroovyAssignabilityCheck
        property "sonar.projectName", "JAlgoArena"
        //noinspection GroovyAssignabilityCheck
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        //noinspection GroovyAssignabilityCheck
        property "sonar.login", System.getenv("SONAR_TOKEN")
    }
}

jar {
    baseName = 'judge-engine'
    version = '1.0'
}

//noinspection GroovyMissingReturnStatement
test {
    testLogging {
        exceptionFormat = 'full'
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

dependencies {
    compile 'com.google.guava:guava:18.0',
            'com.fasterxml.jackson.core:jackson-databind',
            'com.fasterxml.jackson.core:jackson-core',
            'com.fasterxml.jackson.core:jackson-annotations',
            'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'

    compile "org.springframework.boot:spring-boot-starter-web:1.4.0.RELEASE"
    compile 'org.reflections:reflections:0.9.10'
    compile 'io.springfox:springfox-swagger2:2.5.0'
    compile 'io.springfox:springfox-swagger-ui:2.5.0'


    testCompile 'junit:junit:4.12',
                'org.assertj:assertj-core:3.5.2',
                'pl.pragmatists:JUnitParams:1.0.5'
}

apply plugin: 'jacoco'

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

//noinspection GroovyAssignabilityCheck
check.dependsOn jacocoTestReport

defaultTasks 'clean', 'bootRepackage'

task stage {
    dependsOn 'bootRepackage'
}
buildscript {
    ext.kotlin_version = '1.0.5-2'
    ext.spring_version = '1.4.0.RELEASE'

    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "java"
    id "jacoco"
}

apply plugin: 'kotlin'
apply plugin: 'spring-boot'
apply from: "$rootDir/gradle/versioning.gradle"

group = 'org.algohub.engine'
description = """Judge Engine"""

sourceCompatibility = 1.8

repositories {
     mavenCentral()
}

jar {
    baseName = 'judge-engine'
    version = '1.0'
}

test {
    testLogging {
        exceptionFormat = 'full'
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

dependencies {
    compile 'com.google.guava:guava:18.0',
            'com.fasterxml.jackson.core:jackson-databind',
            'com.fasterxml.jackson.core:jackson-core',
            'com.fasterxml.jackson.core:jackson-annotations',
            'com.fasterxml.jackson.datatype:jackson-datatype-jdk8',
            'com.squareup.okhttp3:okhttp:3.4.2',
            "org.springframework.boot:spring-boot-starter-web",
            'io.springfox:springfox-swagger2:2.5.0',
            'io.springfox:springfox-swagger-ui:2.5.0',
            "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
            "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",
            "org.jetbrains.kotlin:kotlin-compiler:$kotlin_version"

    runtime 'ch.qos.logback:logback-classic:1.1.7',
            'ch.qos.logback:logback-core:1.1.7'

    testCompile 'junit:junit:4.12',
                'org.assertj:assertj-core:3.5.2',
                'pl.pragmatists:JUnitParams:1.0.5'
}

if (!project.hasProperty("serverPort")) {
    ext.serverPort = '8080'
}

bootRun {
    systemProperty 'server.port', "$serverPort"
    systemProperty 'sun.zip.disableMemoryMapping', 'true'
}

apply plugin: 'jacoco'

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport

defaultTasks 'clean', 'bootRepackage'

task stage {
    dependsOn 'bootRepackage'
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
}
